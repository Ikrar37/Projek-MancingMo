"""
Django settings for ecommerce project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ‚ö†Ô∏è DEBUGGING: Print BASE_DIR untuk memastikan path benar
print(f"BASE_DIR: {BASE_DIR}")
print(f"TEMPLATES DIR: {BASE_DIR / 'templates'}")
print(f"Templates folder exists: {(BASE_DIR / 'templates').exists()}")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*ef=ua_8#(k*on(^n2!qo+d19ztp-hvs0qw46)m&kso*q0lwxx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'unfold',  # ‚úÖ HARUS DI ATAS django.contrib.admin
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'products',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ecommerce.urls'

# ‚úÖ PERBAIKAN TEMPLATES - INI YANG PALING PENTING
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # ‚ö†Ô∏è CRITICAL: DIRS harus mengarah ke folder templates
        'DIRS': [
            BASE_DIR / 'templates',  # ‚Üê INI YANG PENTING!
            os.path.join(BASE_DIR, 'templates'),  # Alternatif path (backup)
        ],
        # ‚ö†Ô∏è IMPORTANT: APP_DIRS harus True agar bisa load template dari app
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
            ],
        },
    },
]

WSGI_APPLICATION = 'ecommerce.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# ==================== AUTHENTICATION BACKENDS ====================
# ‚úÖ PERBAIKAN: Tambahkan authentication backend secara eksplisit
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Backend default Django
]


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# ==================== INTERNATIONALIZATION ====================
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'id'
TIME_ZONE = 'Asia/Makassar'
USE_I18N = True
USE_TZ = True

# Format angka dengan titik sebagai pemisah ribuan
USE_L10N = False
USE_THOUSAND_SEPARATOR = True
THOUSAND_SEPARATOR = '.'
NUMBER_GROUPING = 3

# Lokalisasi bahasa Indonesia
from django.utils.translation import gettext_lazy as _
LANGUAGES = [
    ('id', _('Indonesian')),
    ('en', _('English')),
]

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


# ==================== STATIC FILES CONFIGURATION ====================
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# ‚úÖ PERBAIKAN: Tambahkan folder static untuk custom CSS admin
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Folder untuk custom static files
]

# Folder untuk production (setelah collectstatic)
STATIC_ROOT = BASE_DIR / 'staticfiles'

# ‚úÖ TAMBAHAN: Pastikan Django bisa menemukan static files
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]


# ==================== MEDIA FILES CONFIGURATION ====================
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication redirects
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'profile'
LOGOUT_REDIRECT_URL = 'home'


# ==================== DJANGO UNFOLD CONFIGURATION ====================
# ‚úÖ KONFIGURASI UNFOLD ADMIN THEME

def environment_callback(request):
    """
    Callback untuk menampilkan environment badge di admin
    """
    if DEBUG:
        return ["Development", "danger"]
    return ["Production", "success"]


def dashboard_callback(request, context):
    """
    Callback untuk menambahkan data ke dashboard admin
    ‚úÖ DIPERBAIKI: Gunakan nama model yang benar (Order, bukan Pesanan)
    """
    from products.models import Order, Product
    from django.db.models import Sum, Count
    
    # Hitung statistik
    total_orders = Order.objects.count()
    total_revenue = Order.objects.filter(
        status='delivered'
    ).aggregate(total=Sum('total'))['total'] or 0
    total_products = Product.objects.count()
    pending_orders = Order.objects.filter(status='pending').count()
    
    context.update({
        "custom_stats": {
            "total_orders": total_orders,
            "total_revenue": total_revenue,
            "total_products": total_products,
            "pending_orders": pending_orders,
        }
    })
    return context


UNFOLD = {
    "SITE_TITLE": "MancingMo Admin",
    "SITE_HEADER": "MancingMo Dashboard",
    "SITE_URL": "/",
    "SITE_ICON": {
        "light": lambda request: "/static/image/logo mancingmo.png",
        "dark": lambda request: "/static/image/logo mancingmo.png",
    },
    "SITE_LOGO": {
        "light": lambda request: "/static/image/logo mancingmo.png",
        "dark": lambda request: "/static/image/logo mancingmo.png",
    },
    "SITE_SYMBOL": "shopping_cart",
    "SHOW_HISTORY": True,
    "SHOW_VIEW_ON_SITE": True,
    "ENVIRONMENT": "ecommerce.settings.environment_callback",
    "DASHBOARD_CALLBACK": "ecommerce.settings.dashboard_callback",
    "COLORS": {
        "primary": {
            "50": "239 246 255",
            "100": "219 234 254",
            "200": "191 219 254",
            "300": "147 197 253",
            "400": "96 165 250",
            "500": "59 130 246",
            "600": "37 99 235",
            "700": "29 78 216",
            "800": "30 64 175",
            "900": "30 58 138",
            "950": "23 37 84",
        },
    },
    "EXTENSIONS": {
        "modeltranslation": {
            "flags": {
                "en": "üá¨üáß",
                "fr": "üá´üá∑",
                "nl": "üáßüá™",
            },
        },
    },
    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": True,
        "navigation": [
            {
                "title": "Dashboard",
                "separator": True,
                "items": [
                    {
                        "title": "Dashboard",
                        "icon": "dashboard",
                        "link": lambda request: "/admin/",
                    },
                ],
            },
            {
                "title": "Manajemen Produk",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Kategori",
                        "icon": "category",
                        "link": lambda request: "/admin/products/category/",
                    },
                    {
                        "title": "Produk",
                        "icon": "inventory_2",
                        "link": lambda request: "/admin/products/product/",
                    },
                ],
            },
            {
                "title": "Transaksi",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Pesanan",
                        "icon": "shopping_bag",
                        "link": lambda request: "/admin/products/order/",
                    },
                    {
                        "title": "Keranjang",
                        "icon": "shopping_cart",
                        "link": lambda request: "/admin/products/cart/",
                    },
                ],
            },
            {
                "title": "Pelanggan",
                "separator": True,
                "collapsible": True,
                "items": [
                    {
                        "title": "Admin",
                        "icon": "admin_panel_settings",
                        "link": lambda request: "/admin/auth/adminuser/",
                    },
                    {
                        "title": "Customer",
                        "icon": "people",
                        "link": lambda request: "/admin/auth/customeruser/",
                    },
                    {
                        "title": "Profile Pengguna",
                        "icon": "person",
                        "link": lambda request: "/admin/products/userprofile/",
                    },
                    {
                        "title": "Review",
                        "icon": "star",
                        "link": lambda request: "/admin/products/productreview/",
                    },
                ],
            },
            {
                "title": "Komunikasi",
                "separator": True,
                "items": [
                    {
                        "title": "Pesan Kontak",
                        "icon": "email",
                        "link": lambda request: "/admin/products/contactmessage/",
                    },
                ],
            },
        ],
    },
    "TABS": [
        {
            "models": [
                "products.product",
            ],
            "items": [
                {
                    "title": "Semua Produk",
                    "link": lambda request: "/admin/products/product/",
                },
            ],
        },
    ],
}